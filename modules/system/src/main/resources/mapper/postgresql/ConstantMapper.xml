<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.loyer.modules.system.mapper.postgresql.ConstantMapper">

    <!--定义constant表的查询SQL-->
    <sql id="selectConstantSql">
        SELECT a.id, a.name, a.key, a.value, a.remark, a.create_time, a.update_time
    </sql>

    <!--保存常量信息（主键存在则更新）-->
    <insert id="saveConstant" parameterType="com.loyer.modules.system.entity.Constant">
        INSERT INTO constant (id, name, key, value, remark)
        VALUES (<if test="id != null">#{id}</if><if test="id == null">DEFAULT</if>, #{name}, #{key}, #{value}, #{remark}) ON CONFLICT(id) DO
        UPDATE SET name = #{name}, key = #{key}, value = #{value}, remark = #{remark}, update_time = now()
    </insert>

    <!--查询常量信息-->
    <select id="selectConstant" parameterType="com.loyer.modules.system.entity.Constant" resultType="com.loyer.modules.system.entity.Constant">
        <include refid="selectConstantSql"/>
        FROM constant a
        <where>
            <if test="id != null">AND a.id = #{id}</if>
            <if test="name != null and name != ''">AND a.name = #{name}</if>
            <if test="key != null and key != ''">AND a.key = #{key}</if>
            <if test="value != null and value != ''">AND a.value = #{value}</if>
            <if test="remark != null and remark != ''">AND a.remark = #{remark}</if>
            <if test="createTime != null">AND a.create_time = #{createTime}</if>
            <if test="updateTime != null">AND a.update_time = #{updateTime}</if>
            <if test="queryText != null and queryText != ''">AND (a.name ~ #{queryText} OR a.key ~ #{queryText})</if>
        </where>
        ORDER BY a.create_time DESC
    </select>

    <!--根据主键批量查询常量信息-->
    <select id="selectConstantByIds" resultType="com.loyer.modules.system.entity.Constant">
        <include refid="selectConstantSql"/>
        FROM constant a WHERE a.id IN
        <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--批量删除常量信息-->
    <delete id="deleteConstant">
        DELETE FROM constant WHERE id IN
        <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>